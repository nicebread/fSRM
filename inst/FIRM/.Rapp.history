setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
sourceDir <- function(path, trace = TRUE, ...) {#
   for (nm in list.files(path, pattern = "\\.[RrSsQq]$")) {#
      if(trace) cat(nm,":")           #
      source(file.path(path, nm), ...)#
      if(trace) cat("\n")#
   }#
}#
#
sourceDir("../R")#
library(lavaan)#
library(plyr)#
library(reshape2)#
library(ggplot2)#
#
# alternatively: load from GitHub#
#library(devtools)#
#install_github("fSRM", "felice303")#
#library(fSRM)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
library(foreign)#
dat <- read.spss("4person.sav", to.data.frame=TRUE)#
#
# convert to long format#
dat2 <- melt(dat, id.vars="id2")#
dat2$pid <- substr(dat2$variable, 1, 1)#
dat2$tid <- substr(dat2$variable, 2, 2)#
dat2$v <- substr(dat2$variable, 3, 6)#
#
s1 <- fSRM(value ~ pid*tid | id2, dat2)
s1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s2 <- fSRM(value ~ pid*tid | id2, dat2, means=TRUE)
s2
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
summary(s2$fit)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s1 <- fSRM(value ~ pid*tid | id2, dat2[-1,], IGSIM=list(c("m", "f"), c("c", "y")))
s1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
str(dat2)
head(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat2$variable <- NULL
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
str(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat2 <- dat2[, c(1, 3, 4, 5, 2)]#
str(dat2)
dat2
attr(dat, "vari")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat2 <- melt(dat, id.vars="id2")#
dat2$pid <- substr(dat2$variable, 1, 1)#
dat2$tid <- substr(dat2$variable, 2, 2)#
dat2$v <- substr(dat2$variable, 3, 6)#
#
dat2$variable <- NULL#
dat2 <- dat2[, c(1, 3, 4, 5, 2)]#
str(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat2 <- melt(dat, id.vars="id2")#
dat2$pid <- substr(dat2$variable, 1, 1)#
dat2$tid <- substr(dat2$variable, 2, 2)#
dat2$v <- substr(dat2$variable, 3, 6)
str(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat2 <- dat2[, c(1, 4, 5, 3)]#
str(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
colnames(dat2) <- c("family.id", "perceiver.id", "target.id", "anxiety")
str(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
library(foreign)#
library(reshape2)#
dat0 <- read.spss("Cook2000.sav", to.data.frame=TRUE)#
#
# create an indicator variable for the family#
dat0$fam <- 1:nrow(dat0)#
#
# convert to long format#
dat <- melt(dat0, id.vars="fam")#
#
# create indicator variables for actor, partner, and measure ##
dat$actor <- substr(dat$variable, 1, 1)#
dat$partner <- substr(dat$variable, 2, 2)#
dat$v <- substr(dat$variable, 3, 6)#
#
# bring both measures back into columns#
dat.wide <- dcast(dat, fam + actor + partner ~ v, value.var="value")#
#
## --> now we have the correct data format for the fSRM package:#
## each row is one directed relationship with multiple measures in columns#
#
# construct a three-person data set#
dat3 <- dat.wide[dat.wide$actor %in% c("c", "f", "m") & dat.wide$partner %in% c("c", "f", "m"), ]#
#
# four-person data set#
dat4 <- dat.wide
str(dat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
write.table(dat2, file="attanx.tab", row.names=FALSE, col.names=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
str(dat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
colnames(dat4) <- c("family.id", "perceiver.id", "target.id", "dep1", "dep2")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
write.table(dat4, file="attdep.tab", row.names=FALSE, col.names=TRUE)
str(dat2)
length(unique(dat2$family.id))
str(dat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM")#
devtools::document()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM")#
devtools::check()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM")#
devtools::install()
rm(list(ls()))
rm(list=ls())
ls()
data(attdep)
ls()
attdep
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1 <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1.d <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep, drop="perceiver.id")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
attdep3 <- attdep[attdep$perceiver.id != "y" & attdep$target.id != "y", ]
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1 <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep3)#
f3.1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1.d <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep3, drop="actor")#
f3.1.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1.d <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep3, drop="partner")#
f3.1.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1.d <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep3, drop="GR")#
f3.1.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.2 <- fSRM(dep1/dep2 ~ perceiver.id*target.id | family.id, attdep3)#
f3.2
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.2.d <- fSRM(dep1/dep2 ~ perceiver.id*target.id | family.id, attdep3, drop="partner")#
f3.2.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.2.d <- fSRM(dep1/dep2 ~ perceiver.id*target.id | family.id, attdep3, drop="GR")#
f3.2.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f4.1 <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep)#
f4.1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f4.1.d <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep, drop="perceiver.id")#
f4.1.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f4.1.d <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep, drop="actor")#
f4.1.d
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f4.2 <- fSRM(dep1/dep2 ~ perceiver.id*target.id | family.id, attdep)#
f4.2
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/Cook2000')
f3.1.m <- fSRM(dep1 ~ perceiver.id*target.id | family.id, attdep3, means=TRUE)#
f3.1.m
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
library(foreign)#
library(reshape2)#
dat <- read.spss("3person.sav", to.data.frame=TRUE)#
#
# convert to long format#
dat$id2 <- 1:nrow(dat)#
dat2 <- melt(dat, id.vars="id2")#
dat2$pid <- substr(dat2$variable, 1, 1)#
dat2$tid <- substr(dat2$variable, 2, 2)#
dat2$v <- substr(dat2$variable, 3, 6)#
dat3 <- dcast(dat2, id2 + pid + tid ~ v, value.var="value")
dat3
head(dat3)
head(dat3, 20)
head(attanx, 20ÃŸ)
head(attanx, 20)
data(attanx)
head(attanx, 20)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
library(foreign)#
dat <- read.spss("4person.sav", to.data.frame=TRUE)#
#
# convert to long format#
dat2 <- melt(dat, id.vars="id2")#
dat2$pid <- substr(dat2$variable, 1, 1)#
dat2$tid <- substr(dat2$variable, 2, 2)#
dat2$v <- substr(dat2$variable, 3, 6)#
#
dat2 <- dat2[, c(1, 4, 5, 3)]#
str(dat2)#
colnames(dat2) <- c("family.id", "perceiver.id", "target.id", "anxiety")
head(dat2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat2 <- dat2[order(dat2$family, dat2$perceiver.id, dat2$target.id), ]
head(dat2, 20)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
rownames(dat2) <- NULL
head(dat2, 20)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
colnames(dat2) <- c("family.id", "perceiver.id", "target.id", "anx")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
write.table(dat2, file="attanx4.tab", row.names=FALSE, col.names=TRUE)
str(dat3)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
colnames(dat3) <- c("family.id", "perceiver.id", "target.id", "anx1", "anx2")#
dat3 <- dat3[order(dat2$family, dat2$perceiver.id, dat2$target.id), ]#
rownames(dat3) <- NULL
head(dat3)
head(dat3, 20)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
write.table(dat3, file="attanx3.tab", row.names=FALSE, col.names=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
write.table(dat2, file="attanx4.tab", row.names=FALSE, col.names=TRUE)
str(dat3)
str(dat3)
head(dat3)
head(dat3, 20)
nrow(dat3)
nrow(dat2)
unique(dat3$family.id)
length(unique(dat3$family.id))
length(unique(dat2$family.id))
dat3
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
library(foreign)#
library(reshape2)#
dat <- read.spss("3person.sav", to.data.frame=TRUE)
dat
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat$id2 <- 1:nrow(dat)#
dat2 <- melt(dat, id.vars="id2")#
dat2$pid <- substr(dat2$variable, 1, 1)#
dat2$tid <- substr(dat2$variable, 2, 2)#
dat2$v <- substr(dat2$variable, 3, 6)#
dat3 <- dcast(dat2, id2 + pid + tid ~ v, value.var="value")
dat3
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
colnames(dat3) <- c("family.id", "perceiver.id", "target.id", "anx1", "anx2")#
dat3 <- dat3[order(dat2$family, dat2$perceiver.id, dat2$target.id), ]#
rownames(dat3) <- NULL
str(dat3)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat3 <- dat3[order(dat2$family.id, dat2$perceiver.id, dat2$target.id), ]
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
dat3 <- dat3[order(dat3$family.id, dat3$perceiver.id, dat3$target.id), ]
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
rownames(dat3) <- NULL
str(dat3)
length(unique(dat3$family.id))
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
write.table(dat3, file="attanx3.tab", row.names=FALSE, col.names=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM")#
devtools::document()#
#
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM")#
devtools::check()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM")#
devtools::install()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s1 <- fSRM(anx ~ perceiver.id*target.id | family.id, attanx4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
load(attanx4)
?fSRM
data(attanx4)
data(attanx3)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s1 <- fSRM(anx ~ perceiver.id*target.id | family.id, attanx4)
s1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s2 <- fSRM(value ~ perceiver.id*target.id | family.id, attanx4, means=TRUE)#
s2#
summary(s2$fit)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s2 <- fSRM(anx ~ perceiver.id*target.id | family.id, attanx4, means=TRUE)#
s2#
summary(s2$fit)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s1 <- fSRM(anx ~ perceiver.id*target.id | family.id, attanx4[-1,], IGSIM=list(c("m", "f"), c("c", "y")))
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
load(attanx3)#
s1 <- fSRM(anx1 ~ perceiver.id*target.id | family.id, attanx3, drop="family")#
s1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/SRMwR-Test')
s2 <- fSRM(anx1 ~ perceiver.id*target.id | family.id, attanx3, drop="actor", means=TRUE)#
s2
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
load("FIRMdemo.RData")#
head(RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
pow1 <- fSRM(RR_UMS2_1 ~ role.p*role.t | gid, RRdat4, IGSIM=list(c("Mother", "Father"), c("Older", "Younger")), means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
pow1 <- fSRM(RR_UMS2_1 ~ role.p*role.t | gid, RRdat4)
pow1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
pow1 <- fSRM(RR_UMS2_3 ~ role.p*role.t | gid, RRdat4)
pow1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
pow1 <- fSRM(RR_UMS1_2 ~ role.p*role.t | gid, RRdat4)
pow1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS1_1 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS1_3 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS1_4 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS1_5 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS1_6 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS1_7 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_2 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_3 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_4 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_5 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_6 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_7 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
fSRM(RR_UMS2_7/RR_UMS2_1 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
n1 <- fSRM(RR_UMS2_7/RR_UMS2_1 ~ role.p*role.t | gid, RRdat4)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
getCor(n1, ops=c("~~", "~"), group=1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/R')
get correlations between latent factors#
getCor <- function(x, ops="~~", g="", label="", group=1) {#
	suppressWarnings(#
		eff <- parameterEstimates(x$fit, standardized=TRUE)#
	)#
	# adjustements for multigroup case: add a group variable with only one group#
	if (is.null(eff$group)) eff$group <- 1#
	eff <- eff[eff$group==group, ]#
	if (label=="") {#
		sel <- eff$op %in% ops & !is.na(eff$est) & !grepl(paste(x$var.id, collapse="|"), eff$rhs)#
		if (g != "") {#
			sel <- eff$op %in% ops & !is.na(eff$est) & !grepl(paste(x$var.id, collapse="|"), eff$rhs) & (grepl(g, eff$lhs) | grepl(g, eff$rhs))#
		}#
	} else {#
		sel <- grepl(label, eff$label, fixed=TRUE)#
		#TODO: include (g != "")? What does it mean?#
	}#
	SS2 <- eff[sel, ]#
	# insert label column if missing#
	if (is.null(SS2$label)) {#
		SS2 <- cbind(SS2[1:3], label="", SS2[, 4:10])#
	}#
	N <- apply(SS2[, 1:3], 1, paste, collapse=" ", sep=" ")	# formula names#
	SS3 <- data.frame(component=N, label=SS2$label, round(SS2[, c("est", "se", "z", "pvalue", "ci.lower", "ci.upper", "std.lv")], 3))#
	SS3$component <- as.character(SS3$component)#
	colnames(SS3) <- c("component", "label", "estimate", "se", "z", "p.value", "ci.lower", "ci.upper", "r")#
	return(SS3[, c(1, 2, 9, 6, 3:5, 7:8)])#
}#
# retrieve model syntax from fSRM object and copy it directly to the clipboard#
# TODO: pbcopy for Windows?#
model <- function(x){#
	cat(x$syntax)#
	clipboard <- pipe("pbcopy", open="w")#
	write(x$syntax, clipboard)#
	close(clipboard)#
}#
# Transform correlation to Fisher's Z#
r2Z <- function(r) {return(0.5 * log((1 + r)/(1 - r)))}#
#
# Recode  Fisher's Z to correlation#
Z2r <- function(Z) {return((exp(2*Z)-1)/(exp(2*Z)+1))}#
#
# calculate average correlation for all elemts of x which are within [-1;1].#
# I.e., out-of-bound estimates are excluded.#
meanNA <- function(x) {#
	x[is.na(x)] <- NA#
	x[x>1] <- NA#
	x[x<(-1)] <- NA#
	return(Z2r(mean(r2Z(x), na.rm=TRUE)))#
}
getCor(n1, ops=c("~~", "~"), group=1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
T <- varComp(n1, group=1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst')
sourceDir <- function(path, trace = TRUE, ...) {#
   for (nm in list.files(path, pattern = "\\.[RrSsQq]$")) {#
      if(trace) cat(nm,":")           #
      source(file.path(path, nm), ...)#
      if(trace) cat("\n")#
   }#
}#
#
sourceDir("../R")#
library(lavaan)#
library(plyr)#
library(reshape2)#
library(ggplot2)#
#
# alternatively: load from GitHub#
#library(devtools)#
#install_github("fSRM", "felice303")#
#library(fSRM)
T <- varComp(n1, group=1)
T
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
which(T$variance < 0)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/inst/FIRM')
T$component[which(T$variance < 0)]
syntax(n1)
model(n1)
